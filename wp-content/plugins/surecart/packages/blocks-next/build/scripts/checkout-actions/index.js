import*as t from"@surecart/api-fetch";import*as e from"@wordpress/interactivity";var a={d:function(t,e){for(var n in e)a.o(e,n)&&!a.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}},n={};a.d(n,{Pp:function(){return C},F4:function(){return b},pc:function(){return l},P$:function(){return I},fT:function(){return p},fu:function(){return h},NN:function(){return x},u0:function(){return y},vO:function(){return $},Rr:function(){return m},ik:function(){return v},Mt:function(){return w},c1:function(){return P},zN:function(){return k},xe:function(){return g},U:function(){return f},ws:function(){return _}});var r,i,o=(r={default:function(){return t.default}},i={},a.d(i,r),i),d=function(t){var e={};return a.d(e,t),e}({getContext:function(){return e.getContext},store:function(){return e.store}});const{addQueryArgs:c,getQueryArg:u}=wp.url,l="surecart/v1/checkouts/",{state:s}=(0,d.store)("surecart/checkout"),p=["line_items","line_item.price","line_item.fees","line_item.variant","variant.image","price.product","product.featured_product_media","product.product_collections","product.product_medias","product_media.media","customer","customer.shipping_address","payment_intent","discount","discount.promotion","recommended_bumps","bump.price","current_upsell","product.variants","discount.coupon","shipping_address","tax_identifier","manual_payment_method","shipping_choices","shipping_choice.shipping_method"],m=function(t){let e=t?`${l}${t}`:l;return e=`${e}${arguments.length>1&&void 0!==arguments[1]?arguments[1]:""}`,c(e,{expand:p})},h=async t=>{let{id:e,query:a={}}=t;return await(0,o.default)({path:c(m(e),_(a))})},f=t=>({live_mode:"test"!==(0,d.getContext)().mode,group_key:s.groupId,abandoned_checkout_enabled:s.abandonedCheckoutEnabled,metadata:{...t?.metadata||{},...window?.scData?.page_id&&{page_id:window?.scData?.page_id},...s?.product?.id&&{buy_page_product_id:s?.product?.id},page_url:window.location.href},...s?.checkout?.email&&{email:s?.checkout?.email},...t}),_=function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const e=(0,d.getContext)();return{...!!e?.formId&&{form_id:e?.formId},...!!s?.product?.id&&{product_id:s?.product?.id},...t}},y=()=>u(window.location.href,"checkout_id")||(s?.checkout?.id?s?.checkout?.id:null),g=async t=>{let{id:e,data:a}=t;const n=await(0,o.default)({path:c(`surecart/v1/line_items/${e}`,{expand:[...(p||[]).map((t=>t.includes(".")?t:`checkout.${t}`)),"checkout"]}),method:"PATCH",data:a});return n?.checkout},k=async t=>{let{id:e,data:a}=t;try{return s.loading=!0,await g({id:e,data:a})}catch(t){if(console.error(t),s.error=t,"line_item.invalid"===t.code)return null}finally{s.loading=!1}};function*v(t){try{s.loading=!0;const{deleted:e}=yield w({checkoutId:s?.checkout?.id,itemId:t});if(!e)throw{code:"error",message:__("Failed to delete","surecart")};return yield h({id:s?.checkout?.id})}catch(t){if(console.error(t),s.error=t,console.log(t.code),"line_item.invalid"===t.code)return null}finally{s.loading=!1}}const w=async t=>{let{checkoutId:e,itemId:a}=t;const{deleted:n}=await(0,o.default)({path:`surecart/v1/line_items/${a}`,method:"DELETE"});return{deleted:n}},C=async t=>{const e=(0,d.getContext)();try{return s.loading=!0,await b({checkout:s.checkout,data:t,live_mode:"test"!==e.mode})}catch(t){console.error(t),s.error=t}finally{s.loading=!1}},I=async t=>{let{id:e=null,data:a={},query:n={}}=t;return e=e??y(),await(0,o.default)({method:e?"PATCH":"POST",path:c(m(e),_(n)),data:f(a)})},P=async t=>{let{data:e={},query:a={}}=t;const n=e?.id??y();return await(0,o.default)({method:"PATCH",path:c(m(n),_(a)),data:f(e)})},x=async t=>{let{id:e,data:a={},query:n={},processor:r}=t;return await(0,o.default)({method:"POST",path:c(m(e,"/finalize"),_({...r?.manual?{manual_payment:!0,manual_payment_method_id:r?.id}:{processor_type:r?.id},...n})),data:f(a)})},b=async t=>{let{checkout:e,data:a,live_mode:n=!1}=t;const r=(e?.line_items?.data||[]).find((t=>t?.variant?.id?t.variant.id===a.variant&&t.price.id===a.price:t.price.id===a.price));if(!e?.id)return await(0,o.default)({method:"POST",path:c(m(null)),data:{line_items:[a],live_mode:n}});if(r)return await g({id:r?.id,data:{...a,quantity:r?.quantity+a?.quantity}});const i=await(0,o.default)({path:c(`surecart/v1/line_items/${r?.id?r?.id:""}`,{consolidate:!0,expand:[...(p||[]).map((t=>t.includes(".")?t:`checkout.${t}`)),"checkout"]}),method:"POST",data:{...a,checkout:e.id}});return i?.checkout},$=async t=>{try{return s.loading=!0,await P({data:{discount:{...t?{promotion_code:t}:{}}}})}catch(t){console.error(t),s.error=t}finally{s.loading=!1}};var O=n.Pp,T=n.F4,q=n.pc,L=n.P$,A=n.fT,D=n.fu,N=n.NN,S=n.u0,z=n.vO,E=n.Rr,U=n.ik,F=n.Mt,H=n.c1,Q=n.zN,j=n.xe,M=n.U,R=n.ws;export{O as addCheckoutLineItem,T as addLineItem,q as baseUrl,L as createOrUpdateCheckout,A as expand,D as fetchCheckout,N as finalizeCheckout,S as getSessionId,z as handleCouponApply,E as parsePath,U as removeCheckoutLineItem,F as removeLineItem,H as updateCheckout,Q as updateCheckoutLineItem,j as updateLineItem,M as withDefaultData,R as withDefaultQuery};