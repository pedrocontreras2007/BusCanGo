import{__,sprintf}from"@wordpress/i18n";import PaystackPop from"@paystack/inline-js";import{h,Host}from"@stencil/core";import apiFetch from"../../../functions/fetch";export class ScPaystackAddMethod{constructor(){this.liveMode=!0,this.customerId=void 0,this.successUrl=void 0,this.currency=void 0,this.loading=void 0,this.loaded=void 0,this.error=void 0,this.paymentIntent=void 0}async handlePaymentIntentCreate(){var e,t;const{public_key:r,access_code:s}=(null===(t=null===(e=this.paymentIntent)||void 0===e?void 0:e.processor_data)||void 0===t?void 0:t.paystack)||{};if(!r||!s)return;const a=new PaystackPop;await a.newTransaction({key:r,accessCode:s,onSuccess:async e=>{if("success"!==(null==e?void 0:e.status))throw{message:sprintf(__("Paystack transaction could not be finished. Status: %s","surecart"),null==e?void 0:e.status)};window.location.assign(this.successUrl)},onClose:e=>{console.error(e),alert((null==e?void 0:e.message)||__("The payment did not process. Please try again.","surecart"))}})}async createPaymentIntent(){var e,t;try{this.loading=!0,this.error="",this.paymentIntent=await apiFetch({method:"POST",path:"surecart/v1/payment_intents",data:{processor_type:"paystack",reusable:!0,live_mode:this.liveMode,customer_id:this.customerId,currency:this.currency,refresh_status:!0}})}catch(r){this.error=(null===(t=null===(e=null==r?void 0:r.additional_errors)||void 0===e?void 0:e[0])||void 0===t?void 0:t.message)||(null==r?void 0:r.message)||__("Something went wrong","surecart")}finally{this.loading=!1}}render(){return h(Host,{key:"3debdd31dbf8e4bf402d7d4d18384b6b514a99bd"},this.error&&h("sc-alert",{key:"f3e2d721310b87387d96ff50eb3edd2b5897f9c7",open:!!this.error,type:"danger"},h("span",{key:"79dfed2ffafaa66f817a281867d2d328f3a054d9",slot:"title"},__("Error","surecart")),this.error),h("div",{key:"ba3f069c91b5fabfe6a86cbdef326b2d018609ac",class:"sc-paystack-button-container"},h("sc-alert",{key:"f316aef141ab9ea070a8094a712ce0810cb18c6e",open:!0,type:"warning"},__("In order to add a new card, we will need to make a small transaction to authenticate it. This is for authentication purposes and will be immediately refunded.","surecart"),h("div",{key:"d09ec3b1303a2a5b7e6937565de7278e52d273e5"},h("sc-button",{key:"b555ed02b8f85004907382d75e9680e9a3ea0e67",loading:this.loading,type:"primary",onClick:()=>this.createPaymentIntent(),style:{marginTop:"var(--sc-spacing-medium)"}},__("Add New Card","surecart"))))))}static get is(){return"sc-paystack-add-method"}static get originalStyleUrls(){return{$:["sc-paystack-add-method.scss"]}}static get styleUrls(){return{$:["sc-paystack-add-method.css"]}}static get properties(){return{liveMode:{type:"boolean",mutable:!1,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:""},attribute:"live-mode",reflect:!1,defaultValue:"true"},customerId:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:""},attribute:"customer-id",reflect:!1},successUrl:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:""},attribute:"success-url",reflect:!1},currency:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:""},attribute:"currency",reflect:!1}}}static get states(){return{loading:{},loaded:{},error:{},paymentIntent:{}}}static get watchers(){return[{propName:"paymentIntent",methodName:"handlePaymentIntentCreate"}]}}